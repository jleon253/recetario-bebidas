{"version":3,"sources":["components/Header.jsx","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.jsx","context/ModalContext.js","components/Spinner/Spinner.jsx","components/Receta/Receta.jsx","components/ListaRecetas.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","setCategorias","useEffect","a","axios","get","then","res","data","catch","error","request","console","log","response","respuesta","drinks","buscarCategorias","Provider","value","children","RecetasContext","RecetasProvider","nombre","categoria","busquedaReceta","setBusquedaReceta","recetas","setRecetas","consultar","setConsultar","cargando","setCargando","url","buscarReceta","Formulario","useContext","busqueda","setBusqueda","obtenerDatos","e","target","name","onSubmit","preventDefault","htmlFor","id","placeholder","onChange","map","key","strCategory","type","ModalContext","ModalProvider","idBebida","setIdBebida","recetaInfo","setRecetaInfo","Spinner","Receta","imagen","receta","ingredientes","i","ingrediente","push","Swal","fire","title","strDrink","imageUrl","strDrinkThumb","html","strInstructions","join","confirmButtonText","confirmButtonColor","document","getElementById","classList","remove","idDrink","src","alt","onClick","add","ListaRecetas","length","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.53b25c04.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <header className=\"col-md-12\">\n      <h1>Drinks Recipe</h1>\n    </header>\n  );\n};\n\nexport default Header;","import React, { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// Crear context\nexport const CategoriasContext = createContext()\n\n// Crear el provider: donde se encuentran las funciones y state\nconst CategoriasProvider = (props) => {\n\tconst [categorias, setCategorias] = useState([])\n\n\tuseEffect(() => {\n\t\tconst buscarCategorias = async () => {\n\t\t\tconst url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\n\t\t\tconst respuesta = await axios\n\t\t\t\t.get(url)\n\t\t\t\t.then((res) => res.data)\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tif (error.request) {\n\t\t\t\t\t\tconsole.log(error.request)\n\t\t\t\t\t} else if (error.response) {\n\t\t\t\t\t\tconsole.log(error.response)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(error)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\tsetCategorias(respuesta.drinks)\n\t\t}\n\t\tbuscarCategorias()\n\t}, [])\n\t/**\n\t * Lo que esta disponible para los componentes hijos, (variables y funciones) se colocan en forma de objeto dentro de value.\n\t * Los componentes hijos estaran en {props.children}, para compartirsen datos\n\t *  */\n\treturn (\n\t\t<CategoriasContext.Provider value={{ categorias }}>\n\t\t\t{props.children}\n\t\t</CategoriasContext.Provider>\n\t)\n}\nexport default CategoriasProvider\n","import React, { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const RecetasContext = createContext()\n\nconst RecetasProvider = (props) => {\n\tconst [busquedaReceta, setBusquedaReceta] = useState({\n\t\tnombre: '',\n\t\tcategoria: '',\n\t})\n\tconst [recetas, setRecetas] = useState([])\n\tconst [consultar, setConsultar] = useState(false)\n\tconst [cargando, setCargando] = useState(false)\n\n\tconst { nombre, categoria } = busquedaReceta\n\n\tuseEffect(() => {\n    if(consultar) {\n      setCargando(true)\n\t\t\tconst buscarReceta = async () => {\n\t\t\t\tconst url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`\n\t\t\t\tconst respuesta = await axios\n\t\t\t\t\t.get(url)\n\t\t\t\t\t.then((res) => res.data)\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tif (error.request) {\n\t\t\t\t\t\t\tconsole.log(error.request)\n\t\t\t\t\t\t} else if (error.response) {\n\t\t\t\t\t\t\tconsole.log(error.response)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\tsetRecetas(respuesta.drinks)\n        setCargando(false)\n\t\t\t}\n\t\t\tbuscarReceta()\n\t\t}\n\t}, [busquedaReceta, consultar, nombre, categoria])\n\n\treturn (\n\t\t<RecetasContext.Provider\n\t\t\tvalue={{\n        recetas,\n        cargando,\n\t\t\t\tsetBusquedaReceta,\n\t\t\t\tsetConsultar,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</RecetasContext.Provider>\n\t)\n}\n\nexport default RecetasProvider\n","import React, { useContext, useState } from 'react'\nimport { CategoriasContext } from '../context/CategoriasContext'\nimport { RecetasContext } from '../context/RecetasContext'\n\nconst Formulario = () => {\n\t// Al usar useContext, ya tengo disponible para consumir ()dentro de este componente) todo lo que este dentro del objeto value de CategoriasContext\n  const {categorias} = useContext(CategoriasContext)\n  const {setBusquedaReceta, setConsultar} = useContext(RecetasContext)\n  \n  const [busqueda, setBusqueda] = useState({\n    nombre: '',\n    categoria: ''\n  })\n\n  // FunciÃ³n para leer los datos de los inputs\n  const obtenerDatos = e => {\n    setBusqueda({\n      ...busqueda,\n      [e.target.name]: e.target.value\n    })\n  };\n\n\treturn (\n\t\t<section className='col-md-12 my-4'>\n      <form onSubmit={e => {\n        e.preventDefault();\n        setBusquedaReceta(busqueda)\n        setConsultar(true)\n      }}>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend className='text-center'>\n\t\t\t\t\t\tSearch drinks by ingredients and categories\n\t\t\t\t\t</legend>\n\t\t\t\t</fieldset>\n\t\t\t\t<div className='row mt-3'>\n\t\t\t\t\t<div className='form-group col-12 col-md-4 col-lg-4'>\n\t\t\t\t\t\t<label htmlFor=\"nombre\">Ingredients</label>\n\t\t\t\t\t\t<input id=\"nombre\" name=\"nombre\" className='form-control' placeholder='Ex: vodka' onChange={obtenerDatos}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group col-12 col-md-4 col-lg-4'>\n\t\t\t\t\t\t<label htmlFor=\"categoria\">Categories</label>\n\t\t\t\t\t\t<select id=\"categoria\" name=\"categoria\" className='form-control' onChange={obtenerDatos}>\n\t\t\t\t\t\t\t<option value=''>-- Choose here --</option>\n\t\t\t\t\t\t\t{categorias.map((categoria) => (\n                <option\n                  key={categoria.strCategory}\n                  value={categoria.strCategory}\n                >\n\t\t\t\t\t\t\t\t\t{categoria.strCategory}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-12 col-md-4 col-lg-4 d-flex align-items-center'>\n\t\t\t\t\t\t<button type=\"submit\" className='btn btn-danger btn-block'>\n\t\t\t\t\t\t\tSearch drinks\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<hr />\n\t\t</section>\n\t)\n}\n\nexport default Formulario\n","import React, { useState, useEffect, createContext } from 'react'\nimport axios from 'axios'\n\nexport const ModalContext = createContext()\n\nconst ModalProvider = (props) => {\n\tconst [idBebida, setIdBebida] = useState(null)\n  const [consultar, setConsultar] = useState(false)\n  const [recetaInfo, setRecetaInfo] = useState(null)\n\n\tuseEffect(() => {\n    if(consultar) {\n\t\t\tconst buscarReceta = async () => {\n\t\t\t\tconst url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idBebida}`\n\t\t\t\tconst respuesta = await axios\n\t\t\t\t\t.get(url)\n\t\t\t\t\t.then((res) => res.data.drinks[0])\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tif (error.request) {\n\t\t\t\t\t\t\tconsole.log(error.request)\n\t\t\t\t\t\t} else if (error.response) {\n\t\t\t\t\t\t\tconsole.log(error.response)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n        setRecetaInfo(respuesta)\n\t\t\t}\n\t\t\tbuscarReceta()\n\t\t}\n\t}, [idBebida, consultar])\n\n\treturn (\n\t\t<ModalContext.Provider\n      value={{\n        recetaInfo,\n        setIdBebida,\n        setConsultar,\n        setRecetaInfo\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</ModalContext.Provider>\n\t)\n}\n\nexport default ModalProvider\n","import React from 'react';\nimport './Spinner.css'\n\nconst Spinner = () => {\n  return (\n    <div className=\"sk-chase mx-auto spinner\">\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;","import React, { useContext, useEffect } from 'react'\nimport { ModalContext } from '../../context/ModalContext'\nimport Swal from 'sweetalert2'\nimport './Receta.css'\nimport Spinner from '../Spinner/Spinner'\n\nconst Receta = ({ receta }) => {\n  let id;\n  let nombre;\n  let imagen;\n  const {recetaInfo, setIdBebida, setConsultar, setRecetaInfo} = useContext(ModalContext)\n\n  useEffect(() => {\n\t\tif (recetaInfo !== null) {\n\t\t\tlet ingredientes = []\n\t\t\tfor (let i = 1; i < 16; i++) {\n\t\t\t\tif ((recetaInfo[`strIngredient${i}`] !== null)&&(recetaInfo[`strIngredient${i}`] !== '')) {\n\t\t\t\t\tconst ingrediente = `${recetaInfo[`strIngredient${i}`]}: ${\n\t\t\t\t\t\trecetaInfo[`strMeasure${i}`]\n\t\t\t\t\t}`\n\t\t\t\t\tingredientes.push(ingrediente)\n\t\t\t\t}\n      }\n\t\t\tSwal.fire({\n\t\t\t\ttitle: recetaInfo.strDrink,\n\t\t\t\timageUrl: recetaInfo.strDrinkThumb,\n        html: `<p class=\"text-left\"><b>Instructions:</b></p>\n        <p class=\"text-left\">${\n\t\t\t\t\trecetaInfo.strInstructions\n          }</p>\n        <br/>\n        <p class=\"text-left\"><b>Ingredients:</b></p>\n        <ul class=\"list-group\">\n        ${ingredientes.map((i) => (\n          `<li class=\"list-group-item\">${i}</li>`)\n          ).join('')}\n        </ul>`,\n        confirmButtonText: 'Close',\n        confirmButtonColor: '#dc3545',\n      }).then(() => {\n        setConsultar(false)\n        setIdBebida(null)\n        setRecetaInfo(null);\n      })\n      document.getElementById(id).classList.remove('cargando');\n\t\t}\n\t}, [recetaInfo, id, setConsultar, setIdBebida, setRecetaInfo])\n\n\tif (!receta) return\n\n\tid = receta.idDrink\n\tnombre = receta.strDrink\n\timagen = receta.strDrinkThumb\n\n\tconst mostrarReceta = () => {\n    document.getElementById(id).classList.add('cargando');\n    setIdBebida(id)\n    setConsultar(true)\n\t}\n\n\treturn (\n\t\t<div id={id} className='card'>\n\t\t\t<img\n\t\t\t\tsrc={imagen}\n\t\t\t\tclassName='card-img-top img-fluid img-thumbnail'\n\t\t\t\talt={nombre}\n\t\t\t></img>\n\t\t\t<div className='card-body'>\n\t\t\t\t<h5 className='card-title'>{nombre}</h5>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='btn btn-outline-danger btn-block btn-lg my-4'\n\t\t\t\t\tonClick={mostrarReceta}\n\t\t\t\t>\n          <span className=\"txt\">View recipe</span>\n          <Spinner/>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Receta\n","import React, {useContext} from 'react';\nimport {RecetasContext} from '../context/RecetasContext'\nimport Receta from './Receta/Receta'\nimport Spinner from './Spinner/Spinner'\n\nconst ListaRecetas = () => {\n\n  const {recetas, cargando} = useContext(RecetasContext);\n\n  return (\n    cargando ? <Spinner /> : (\n      (recetas.length === 0) ? null : <section className=\"col-12\">\n        <h2 className=\"text-center\">Drinks list</h2>\n        <div className=\"row\">\n          <div className=\"card-columns\">\n            {recetas.map(receta => (\n              <Receta key={receta.idDrink} receta={receta}/>\n            ))}\n          </div>\n        </div>\n      </section>\n    )\n  );\n};\n\nexport default ListaRecetas;","import React from 'react'\n\nimport Header from './components/Header'\nimport Formulario from './components/Formulario'\nimport ListaRecetas from './components/ListaRecetas'\n\nimport CategoriasProvider from './context/CategoriasContext'\nimport RecetasProvider from './context/RecetasContext'\nimport ModalProvider from './context/ModalContext'\n\nfunction App() {\n\treturn (\n\t\t/**\n\t\t * CategoriasProvider ya le permite usar a los componentes hijos,\n\t\t * todas las varibles (state) y funciones que tenga disponibles.\n\t\t * Por eso se debe ubicar en la raÃ­z principal.\n\t\t */\n\t\t<CategoriasProvider>\n\t\t\t<RecetasProvider>\n\t\t\t\t<ModalProvider>\n\t\t\t\t\t<div className='container'>\n            <div className='row'>\n              <Header />\n            </div>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<Formulario />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row px-3'>\n\t\t\t\t\t\t\t<ListaRecetas />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ModalProvider>\n\t\t\t</RecetasProvider>\n\t\t</CategoriasProvider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}